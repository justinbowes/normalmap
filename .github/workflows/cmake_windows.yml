name: CMake_Windows

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      working-directory: ${{github.workspace}}/win64
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/win64/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      working-directory: ${{github.workspace}}/win64
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/win64/build --config ${{env.BUILD_TYPE}}
   
    - name: Get branch names
      id: branch-name
      uses: tj-actions/branch-names@v4.3
      
    - name: Set env
      id: envname
      run: echo ::set-output name=pr_title::"Windows build - v0.2.0 - ${{ steps.branch-name.outputs.current_branch }}"
      
    - name: Release Linux
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "v0.2.0"
        prerelease: true
        title: ${{steps.envname.outputs.pr_title}}
        files: |
          ${{github.workspace}}/win64/build/Release/normalmap.exe
          ${{github.workspace}}/README.md
         
